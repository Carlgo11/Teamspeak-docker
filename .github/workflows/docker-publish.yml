name: Publish Image

on:
  release:
    types: published

env:
  IMAGE_NAME: teamspeak

jobs:
  github_package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  docker_hub:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: crazy-max/ghaction-docker-buildx@v3
        with:
          buildx-version: latest
          qemu-version: latest

      - name: Build image
        run: |
          echo "${{ secrets.DOCKER }}" | docker login --username carlgo11 --password-stdin
          docker buildx create --use
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          echo IMAGE_NAME=$IMAGE_NAME
          echo VERSION=$VERSION
          docker buildx build --platform linux/amd64,linux/arm/v7,linux/arm64 --rm --tag carlgo11/$IMAGE_NAME:latest --tag carlgo11/$IMAGE_NAME:$VERSION --push --compress .
